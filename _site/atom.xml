<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Make A Difference</title>
 <link href="http://tech.tjs.im/" rel="self"/>
 <link href="http://tech.tjs.im"/>
 <updated>2013-11-03T00:24:30+08:00</updated>
 <id>http://tech.tjs.im</id>
 <author>
   <name>Stephen</name>
   <email></email>
 </author>

 
 <entry>
   <title>［译文］ 如何用 Jekyll 发表博客</title>
   <link href="http://tech.tjs.im/2013-11-01/jekyll-posts.html"/>
   <updated>2013-11-01T00:00:00+08:00</updated>
   <id>http://tech.tjs.im/2013-11-01/jekyll-posts</id>
   <content type="html">&lt;p&gt;Jeklly 的一个最好的特点是“关注 blog 本身”。这是指什么呢？简单的说就是写博客的过程被
铸造进了 Jekyll 的功能中。你只需简单的管理你电脑中的一个文件夹下的文本文件就
可以写文章并方便的在线上发布。与繁琐的配置和维护数据库和基于网站的内容管理系统（CMS）相比，
这是一个非常受欢迎的改变。&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;文章文件夹&lt;/h2&gt;

&lt;p&gt;在&lt;a href=&quot;../structure/&quot;&gt;目录结构&lt;/a&gt;介绍中说明过，所有的文章都在&lt;code&gt;_posts&lt;/code&gt;文件夹中。
这些文件可以用&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 编写，
也可以用&lt;a href=&quot;http://textile.sitemonks.com/&quot;&gt;Textile&lt;/a&gt; 格式编写。只要文件中有
&lt;a href=&quot;../frontmatter/&quot;&gt;YAML头信息&lt;/a&gt;，它们就会从源格式转化成 HTML 页面，从而成为
你的静态网站的一部分。&lt;/p&gt;

&lt;h3&gt;创建文章的文件&lt;/h3&gt;

&lt;p&gt;发表一篇新文章，你所需要做的就是在&lt;code&gt;_posts&lt;/code&gt;文件夹中创建一个新的文件。
文件名的命名非常重要。Jekyll 要求一篇文章的文件名遵循下面的格式：
  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;年-月-日-标题.MARKUP&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;在这里，&lt;code&gt;年&lt;/code&gt;是4位数字，&lt;code&gt;月&lt;/code&gt;和&lt;code&gt;日&lt;/code&gt;都是2位数字。&lt;code&gt;MARKUP&lt;/code&gt;扩展名代表了这篇文章
是用什么格式写的。下面是一些合法的文件名的例子：
  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;2011-12-31-new-years-eve-is-awesome.md
2012-09-12-how-to-write-a-blog.textile&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;h3&gt;内容格式&lt;/h3&gt;

&lt;p&gt;所有博客文章顶部必须有一段&lt;a href=&quot;../frontmatter/&quot;&gt;YAML头信息&lt;/a&gt;(YAML front- matter)。
在它下面，就可以选择你喜欢的格式来写文章。Jekyll支持2种流行的标记语言格式：
&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 和
&lt;a href=&quot;http://textile.sitemonks.com/&quot;&gt;Textile&lt;/a&gt;. 这些格式都有自己的方式来标记文章中不
同类型的内容，所以你首先需要熟悉这些格式并选择一种最符合你需求的。&lt;/p&gt;

&lt;h2&gt;引用图片和其它资源&lt;/h2&gt;

&lt;p&gt;很多时候，你需要在文章中引用图片、下载或其它数字资源。尽管 Markdown 和 Textile
在链接这些资源时的语法并不一样，但你只需要关心在站点的哪些地方保存这些文件。&lt;/p&gt;

&lt;p&gt;由于 Jekyll 的灵活性，有很多方式可以解决这个问题。一种常用做法是在工程的根目录下
创建一个文件夹，命名为&lt;code&gt;assets&lt;/code&gt; 或者 &lt;code&gt;downloads&lt;/code&gt;，将图片文件，下载文件或者其它的
资源放到这个文件夹下。然后在任何一篇文章中，它们都可以用站点的根目录来进行引用。
这和你站点的域名/二级域名和目录的设置相关，下面有一些例子（Markdown格式）
来演示怎样利用&lt;code&gt;site.url&lt;/code&gt;变量来解决这个问题。&lt;/p&gt;

&lt;p&gt;在文章中引用一个图片&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;text&#39;&gt;… 从下面的截图可以看到：
&lt;img src=&quot;{{%20site.url%20}}/assets/screenshot.jpg&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;链接一个读者可下载的 PDF 文件：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;text&#39;&gt;… 你可以直接 &lt;a href=&quot;{{%20site.url%20}}/assets/mydoc.pdf&quot;&gt;下载 PDF&lt;/a&gt;.&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;
  &lt;h5&gt;提示™: 链接只使用站点的根URL&lt;/h5&gt;
  &lt;p&gt;
    如果你&lt;strong&gt;确信&lt;/strong&gt;你的站点只在域名的根 URL 下做展示，你可以不使用
     &lt;code&gt;{{ site.url }}&lt;/code&gt;变量。在这种情况下，
     直接使用&lt;code&gt;/path/file.jpg&lt;/code&gt;即可。
  &lt;/p&gt;
&lt;/div&gt;


&lt;h2&gt;文章的目录&lt;/h2&gt;

&lt;p&gt;所有文章都在一个目录中是没有问题的，但是如果你不将文章列表列出来博客文章是不会被人看到
。在另一个页面上创建文章的列表（或者使用&lt;a href=&quot;../templates/&quot;&gt;模版&lt;/a&gt;）是很简单的。
感谢&lt;a href=&quot;http://wiki.shopify.com/Liquid&quot;&gt;Liquid模版语言&lt;/a&gt;和它的标记，下面
是如何创建文章列表的简单例子：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;html&#39;&gt;&amp;lt;ul&amp;gt;
  {% for post in site.posts %}
    &amp;lt;li&amp;gt;
      &amp;lt;a href=&amp;quot;{{ post.url }}&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;当然，你可以完全控制怎样（在哪里）显示你的文章，如何管理你的站点。如果你想了解
更多你需要读一下&lt;a href=&quot;../templates/&quot;&gt;Jekyll 的模版是怎样工作的&lt;/a&gt;这篇文章。&lt;/p&gt;

&lt;h2&gt;文章摘要&lt;/h2&gt;

&lt;p&gt;Jekyll 会自动取每篇文章从开头到第一次出现&lt;code&gt;excerpt_separator&lt;/code&gt;的地方作为文章的摘要，
并将此内容保存到变量&lt;code&gt;post.excerpt&lt;/code&gt;中。拿上面生成文章列表的例子，你可能想在每个标题下给出文章内容的提示，你可以在每篇文章
的第一段加上如下的代码：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;html&#39;&gt;&amp;lt;ul&amp;gt;
  {% for post in site.posts %}
    &amp;lt;li&amp;gt;
      &amp;lt;a href=&amp;quot;{{ post.url }}&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
      &amp;lt;p&amp;gt;{{ post.excerpt }}&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;如果你不喜欢自动生成摘要，你可以在文章的YAML中增加&lt;code&gt;excerpt&lt;/code&gt;来覆盖它。完全禁止掉可以
将&lt;code&gt;excerpt_separator&lt;/code&gt;设置成&lt;code&gt;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;高亮代码片段&lt;/h2&gt;

&lt;p&gt;Jekyll 自带语法高亮功能，它是由 Pygments 来实现的。在文章中插入一段高亮代码非常
容易，只需使用下面的 Liquid 标记：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;text&#39;&gt;{% highlight ruby %}
def show
  @widget = Widget(params[:id])
  respond_to do |format|
    format.html # show.html.erb
    format.json { render json: @widget }
  end
end
{% endhighlight %}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;将输出下面的效果：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;def show
  @widget = Widget(params[:id])
  respond_to do |format|
    format.html # show.html.erb
    format.json { render json: @widget }
  end
end&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;
  &lt;h5&gt;提示™：显示行数&lt;/h5&gt;
  &lt;p&gt;
    你可以在代码片段中增加关键字&lt;code&gt;linenos&lt;/code&gt;来显示行数。
    这样完整的高亮开始标记将会是:&lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt;。
  &lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;有了这些基础知识就可以开始你的第一篇文章了。当你准备更深入的了解还可以做什么的
时候，你可能会对如何&lt;a href=&quot;../permalinks/&quot;&gt;定制文章的永久链接&lt;/a&gt; 或在文章和站点的其它位
置中使用&lt;a href=&quot;../variables/&quot;&gt;定制变量&lt;/a&gt;感兴趣。&lt;/p&gt;

&lt;p&gt;原文：&lt;a href=&quot;http://jekyllrb.com/docs/posts/&quot; target=&quot;_blank&quot;&gt;http://jekyllrb.com/docs/posts/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>［译文］ 如何创建 Jekyll 静态页面</title>
   <link href="http://tech.tjs.im/2013-11-01/jekyll-pages.html"/>
   <updated>2013-11-01T00:00:00+08:00</updated>
   <id>http://tech.tjs.im/2013-11-01/jekyll-pages</id>
   <content type="html">&lt;p&gt;作为&lt;a href=&quot;../posts/&quot;&gt;写文章&lt;/a&gt;的补充，Jekyll 还可以创建静态页面。
利用 Jekyll 带来的便利，你只需要复制文件或文件夹，就是这么简单。&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;主页&lt;/h2&gt;

&lt;p&gt;像任何网站的配置一样，需要按约定在站点的要目录下找到 &lt;code&gt;index.html&lt;/code&gt; 文件，
这个文件将被做为主页显示出来。除非你的站点设置了其它的文件作为默认文件，
这个文件就将是你的 Jekyll 生成站点的主页。&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;
  &lt;h5&gt;提示™: 在主页上使用布局&lt;/h5&gt;
  &lt;p&gt;
    站点上任何 HTML 文件，包括主页，都可以使用布局和 include 中的内容一般共用的内容，如页面的 header 和 footer. 将合适的部分抽出放到布局中。
  &lt;/p&gt;
&lt;/div&gt;


&lt;h2&gt;其它的页面的位置&lt;/h2&gt;

&lt;p&gt;将 HTML 文件放在哪里取决于你想让它们如何工作。有两种方式可以创建页面：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;命名 HTML 文件：将命名好的为页面准备的 HTML 文件放在站点的根目录下。&lt;/li&gt;
&lt;li&gt;命名文件夹：在站点的根目录下为每一个页面创建一个文件夹，并把 index.html 文件放在每
个文件夹里。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;这两种方法都可以工作（并且可以混合使用），它们唯一的区别就是访问的 URL 样式不同。&lt;/p&gt;

&lt;h3&gt;命名 HTML 文件&lt;/h3&gt;

&lt;p&gt;增加一个新页面的最简单方法就是把给 HTML 文件起一个适当的名字并放在根目录下。
一般来说，一个站点下通常会有：主页 (homepage), 关于 (about), 和一个联系 (contact)
页。根目录下的文件结构和对应生成的 URL 会是下面的样子：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;.
|-- &lt;em&gt;config.yml
|-- &lt;/em&gt;includes/
|-- &lt;em&gt;layouts/
|-- &lt;/em&gt;posts/
|-- _site/
|-- about.html    # =&amp;gt; http://yoursite.com/about.html
|-- index.html    # =&amp;gt; http://yoursite.com/
└── contact.html  # =&amp;gt; http://yoursite.com/contact.html&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;h3&gt;命名一个文件夹并包含一个 index.html 文件&lt;/h3&gt;

&lt;p&gt;上面的方法可以很好的工作，但是有些人不喜欢在 URL 中显示文件的扩展名。用 Jekyll 达
到这种效果，你只需要为每个顶级页面创建一个文件夹，并包含一个 &lt;code&gt;inex.html&lt;/code&gt; 文件。
这样，每个 URL 就将以文件夹的名字作为结尾，网站服务器会将对应的 index.html
展示给用户。下面是一个示例来展示这种结构的样子：&lt;/p&gt;

&lt;p&gt;  &lt;div&gt;
    &lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;.
├── &lt;em&gt;config.yml
├── &lt;/em&gt;includes/
├── &lt;em&gt;layouts/
├── &lt;/em&gt;posts/
├── _site/
├── about/
|   └── index.html  # =&amp;gt; http://yoursite.com/about/
├── contact/
|   └── index.html  # =&amp;gt; http://yoursite.com/contact/
└── index.html      # =&amp;gt; http://yoursite.com/&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;这种方式可能不适合每个人，对那些喜欢干净 URL 的人这是一种简单有效的方法。
最终选择哪种方法完全由你来决定！&lt;/p&gt;

&lt;p&gt;原文：&lt;a href=&quot;http://jekyllrb.com/docs/pages/&quot; target=&quot;_blank&quot;&gt;http://jekyllrb.com/docs/pages/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>